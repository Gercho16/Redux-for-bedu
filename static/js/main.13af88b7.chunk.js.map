{"version":3,"sources":["components/Menu.jsx","types/usuariosTypes.jsx","actions/usuariosActions.jsx","components/General/Spinner.jsx","components/General/Fatal.jsx","components/usuarios/Tabla.jsx","components/usuarios/Usuarios.jsx","components/Publicaciones/Comentarios.jsx","types/publicacionesTypes.jsx","components/Publicaciones/index.jsx","actions/publicacionesActions.jsx","types/tareasTypes.jsx","actions/tareasActions.jsx","components/Tareas/index.jsx","components/Tareas/Guardar.jsx","components/App.js","reducers/usuariosReducer.jsx","reducers/publicacionesReducer.jsx","reducers/tareasReducer.jsx","reducers/index.jsx","index.js"],"names":["Menu","props","id","to","TRAER_TODOS","CARGANDO","ERROR","traerTodos","dispath","a","async","type","axios","get","response","payload","data","error","console","log","message","Spinner","className","Fatal","mensaje","connect","reducers","usuariosReducer","usuarios","map","usuario","key","name","email","website","Usuarios","ponerContenido","cargando","this","length","React","Component","usuariosActions","publicacionesReducer","com_error","com_cargando","comentarios","comentario","body","ACTUALIZAR","usuariosTraerTodos","publicacionesTraerPorUsuario","dispatch","getState","publicaciones","usuario_id","respuesta","nuevas","publicacion","abierto","publicaciones_actualizadas","publicaciones_key","usuarios_actualizados","usuariosTypes","abrirCerrar","pub_key","com_key","seleccionada","actualizada","traerComentarios","Publicaciones","ponerUsuario","match","params","nombre","ponerPublicaciones","mostrarInfo","onClick","mostrarComentarios","title","mapDispatchToProps","TRAER_TODAS","GUARDAR","LIMPIAR","traerTodas","tareas","tarea","userId","cambioUsuarioId","cambioTitulo","titulo","agregar","nueva_tarea","post","editar","tarea_editada","put","cambioCheck","tarea_id","tareasReducer","actualizadas","completed","eliminar","delete","limpiarForma","Tareas","mostrarContenido","Object","keys","ponerTareas","por_usuario","defaultChecked","onChange","tareasActions","Guardar","event","target","value","guardar","deshabilitar","mostrarAccion","regresar","disabled","App","exact","path","component","TareasGuardar","INITIAL_STATE","combineReducers","state","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13af88b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <nav id=\"menu\">\r\n            <Link to=\"/\">Usuarios</Link>\r\n            <Link to=\"/tareas\">Tareas</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","export const TRAER_TODOS = 'usuarios_traer_todos';\r\nexport const CARGANDO = 'usuarios_cargando';\r\nexport const ERROR = 'usuarios_error';","import axios from 'axios';\r\nimport { TRAER_TODOS, CARGANDO, ERROR } from '../types/usuariosTypes'\r\n\r\nexport const traerTodos =  () => {\r\n    return async (dispath) => {\r\n        dispath({\r\n            type: CARGANDO\r\n        })\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            dispath({\r\n                type: TRAER_TODOS,\r\n                payload: response.data,\r\n                error: ''\r\n            })\r\n        } catch (error) {\r\n            console.log('error:', error.message);\r\n            dispath({\r\n                type: ERROR,\r\n                payload: 'Informacion de usuarios no disponible'\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../../css/spinner.css';\r\n\r\nfunction Spinner(props) {\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nfunction Fatal(props) {\r\n    console.log(props)\r\n    return (\r\n        <h2 className=\"center rojo\">\r\n            {props.mensaje}\r\n        </h2>\r\n    );\r\n}\r\n\r\nexport default Fatal;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Tabla(props) {\r\n    const ponerFilas = () => {\r\n        return props.usuarios.map((usuario, key) => (\r\n            <tr key={usuario.id}>\r\n                <td>{usuario.name}</td>\r\n                <td>{usuario.email}</td>\r\n                <td>{usuario.website}</td>\r\n                <td>\r\n                    <Link to={ `/publicaciones/${key}` }>\r\n                        <div className=\"eye-solid icon\"></div>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre</th>\r\n                        <th>Correo</th>\r\n                        <th>Enlace</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ponerFilas()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (reducers) => {\r\n    return reducers.usuariosReducer;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tabla);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as usuariosActions from '../../actions/usuariosActions';\r\nimport Spinner from '../General/Spinner';\r\nimport Fatal from '../General/Fatal';\r\nimport Tabla from './Tabla';\r\n\r\nclass Usuarios extends React.Component{\r\n      componentDidMount() {\r\n        if(!this.props.usuarios.length) {\r\n          this.props.traerTodos();\r\n        }\r\n      }\r\n\r\n      ponerContenido = () => {\r\n        if ( this.props.cargando) {\r\n          return <Spinner />;\r\n        }\r\n        if ( this.props.error ) {\r\n          return <Fatal mensaje={this.props.error}/>;\r\n        }\r\n        return (\r\n          <Tabla />\r\n        );\r\n      }\r\n\r\n      \r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <h1 className=\"center\">Usuarios</h1>\r\n            { this.ponerContenido() }\r\n          </div>\r\n        );\r\n      };\r\n}\r\n\r\nconst mapStateToProps = (reducers) => {\r\n  return reducers.usuariosReducer;\r\n}\r\n\r\nexport default connect(mapStateToProps, usuariosActions)(Usuarios);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Spinner from '../General/Spinner'\r\nimport Fatal from '../General/Fatal'\r\n\r\nfunction Comentarios(props) {\r\n    const ponerComentarios = () => {\r\n        if (props.com_error) {\r\n            return <Fatal mensaje={ props.com_error }/>\r\n        }\r\n        if (props.com_cargando && !props.comentarios.length) {\r\n            return <Spinner />\r\n        }\r\n        return props.comentarios.map((comentario) => {\r\n            return (\r\n                <li>\r\n                    <b>\r\n                        <u>\r\n                            { comentario.email }\r\n                        </u>\r\n                    </b>\r\n                    <br/>\r\n                    { comentario.body  }\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            { ponerComentarios() }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({publicacionesReducer}) => {\r\n    return publicacionesReducer;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comentarios);","export const ACTUALIZAR = 'publicaciones_actualizar';\r\nexport const CARGANDO = 'publicaciones_cargando';\r\nexport const ERROR = 'publicaciones_error';\r\nexport const COM_ACTUALIZAR = 'comentarios_actualizar';\r\nexport const COM_CARGANDO = 'comentarios_cargando';\r\nexport const COM_ERROR = 'comentarios_error';","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../General/Spinner';\r\nimport Fatal from '../General/Fatal';\r\nimport Comentarios from './Comentarios';\r\n\r\nimport * as usuariosActions from '../../actions/usuariosActions';\r\nimport * as publicacionesActions from '../../actions/publicacionesActions';\r\n\r\nconst { traerTodos: usuariosTraerTodos } = usuariosActions;\r\nconst { traerPorUsuario: publicacionesTraerPorUsuario, abrirCerrar, traerComentarios } = publicacionesActions;\r\n\r\nclass Publicaciones extends React.Component {\r\n    async componentDidMount() {\r\n        const {\r\n            usuariosTraerTodos,\r\n            publicacionesTraerPorUsuario,\r\n            match: {\r\n                params: {\r\n                    key\r\n                }\r\n            }\r\n        } = this.props\r\n        if ( !this.props.usuariosReducer.usuarios.length ) {\r\n            await usuariosTraerTodos();\r\n        }\r\n        if (this.props.usuariosReducer.error) {\r\n            return;\r\n        }\r\n        if ( !('publicaciones_key' in this.props.usuariosReducer.usuarios[key])) {\r\n            this.props.publicacionesTraerPorUsuario(key);\r\n        }\r\n    }\r\n\r\n    ponerUsuario = () => {\r\n        const {\r\n            usuariosReducer,\r\n            match: {\r\n                params: {\r\n                    key\r\n                }\r\n            }\r\n        } = this.props\r\n        if (usuariosReducer.error) {\r\n            return <Fatal mensaje={usuariosReducer.error}/>\r\n        }\r\n        if (!usuariosReducer.usuarios.length || usuariosReducer.cargando) {\r\n            return <Spinner />\r\n        }\r\n        const nombre = usuariosReducer.usuarios[key].name;\r\n        return (\r\n            <h1 className=\"center\">\r\n                Publicaciones de {nombre}\r\n            </h1>\r\n        )\r\n    };\r\n\r\n    ponerPublicaciones = () => {\r\n        const {\r\n            usuariosReducer,\r\n            usuariosReducer: { usuarios },\r\n            publicacionesReducer,\r\n            publicacionesReducer: { publicaciones },\r\n            match: {\r\n                params: {\r\n                    key\r\n                }\r\n            }\r\n        } = this.props;\r\n\r\n        if ( !usuarios.length ) {\r\n            return;\r\n        }\r\n        if ( usuariosReducer.error ) {\r\n            return;\r\n        }\r\n        if ( publicacionesReducer.cargando ) {\r\n            return <Spinner />\r\n        }\r\n        if ( publicacionesReducer.error ) {\r\n            return <Fatal mensaje={publicacionesReducer.error}/>\r\n        }\r\n        if ( !publicaciones.length ) {\r\n            return;\r\n        }\r\n        if ( !('publicaciones_key' in usuarios[key]) ) {\r\n            return;\r\n        }\r\n        const { publicaciones_key } = usuarios[key];\r\n        \r\n        return this.mostrarInfo(publicaciones[publicaciones_key], publicaciones_key)\r\n    }\r\n\r\n    mostrarInfo = (publicaciones, pub_key) => {\r\n         return publicaciones.map((publicacion, com_key) => {\r\n            return (\r\n                <div \r\n                    className=\"pub_titulo\"\r\n                    key={ publicacion.id }\r\n                    onClick={ () => this.mostrarComentarios(pub_key, com_key, publicacion.comentarios) }\r\n                >\r\n                    <h2>\r\n                        { publicacion.title }\r\n                    </h2>\r\n                    <h3>\r\n                        { publicacion.body }\r\n                    </h3>\r\n                    {\r\n                        (publicacion.abierto) ? <Comentarios comentarios={publicacion.comentarios}/> : ''\r\n                    }\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    mostrarComentarios = (pub_key, com_key, comentarios) => {\r\n        this.props.abrirCerrar(pub_key, com_key);\r\n        if (!comentarios.length) {\r\n            this.props.traerComentarios(pub_key, com_key)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return(\r\n            <div>           \r\n                { this.ponerUsuario() }     \r\n                { this.ponerPublicaciones() }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ usuariosReducer, publicacionesReducer }) => {\r\n    return {usuariosReducer, publicacionesReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    usuariosTraerTodos,\r\n    publicacionesTraerPorUsuario,\r\n    abrirCerrar,\r\n    traerComentarios\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);","import axios from 'axios';\r\n\r\nimport { ACTUALIZAR, CARGANDO, ERROR, COM_ACTUALIZAR, COM_CARGANDO, COM_ERROR } from '../types/publicacionesTypes'\r\nimport * as usuariosTypes from '../types/usuariosTypes';\r\n\r\nconst { TRAER_TODOS: USUARIOS_TRAER_TODOS } = usuariosTypes;\r\n\r\nexport const traerPorUsuario = (key) => async (dispatch, getState) => {\r\n    dispatch ({\r\n        type: CARGANDO\r\n    })\r\n\r\n    const { usuarios } = getState().usuariosReducer;\r\n    const { publicaciones } = getState().publicacionesReducer;\r\n    const usuario_id = usuarios[key].id;\r\n\r\n    try {\r\n        const respuesta = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${usuario_id}`);\r\n        const nuevas = respuesta.data.map((publicacion) => {\r\n            return {... publicacion\r\n                , comentarios: [],\r\n                abierto: false}\r\n        })\r\n        const publicaciones_actualizadas = [\r\n            ... publicaciones,\r\n            nuevas\r\n        ];\r\n\r\n        dispatch({\r\n            type: ACTUALIZAR,\r\n            payload: publicaciones_actualizadas\r\n        })\r\n\r\n        const publicaciones_key = publicaciones_actualizadas.length - 1;\r\n        const usuarios_actualizados = [... usuarios];\r\n        usuarios_actualizados[key] = {\r\n            ... usuarios[key],\r\n            publicaciones_key\r\n        };\r\n\r\n        dispatch({\r\n            type: USUARIOS_TRAER_TODOS,\r\n            payload: usuarios_actualizados\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: ERROR,\r\n            payload: 'Publicaciones no disponibles'\r\n        })\r\n    }\r\n}\r\n\r\nexport const abrirCerrar = (pub_key, com_key) => (dispatch, getState) => {\r\n    const { publicaciones } = getState().publicacionesReducer\r\n    const seleccionada = publicaciones[pub_key][com_key]\r\n\r\n    const actualizada = {\r\n        ... seleccionada,\r\n        abierto : !seleccionada.abierto\r\n    }\r\n\r\n    const publicaciones_actualizadas = [ ... publicaciones]\r\n    publicaciones_actualizadas[pub_key] = [\r\n        ... publicaciones[pub_key]\r\n    ]\r\n    publicaciones_actualizadas[pub_key][com_key] = actualizada\r\n\r\n    dispatch({\r\n        type: ACTUALIZAR,\r\n        payload: publicaciones_actualizadas\r\n    })\r\n}\r\n\r\nexport const traerComentarios = (pub_key, com_key) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: COM_CARGANDO,\r\n    })\r\n    const { publicaciones } = getState().publicacionesReducer\r\n    const seleccionada = publicaciones[pub_key][com_key]\r\n\r\n    try {\r\n        const respuesta = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${seleccionada.id}`);\r\n\r\n        const actualizada = {\r\n            ... seleccionada,\r\n            comentarios: respuesta.data\r\n        }\r\n\r\n        const publicaciones_actualizadas = [ ... publicaciones]\r\n        publicaciones_actualizadas[pub_key] = [\r\n            ... publicaciones[pub_key]\r\n        ]\r\n        publicaciones_actualizadas[pub_key][com_key] = actualizada\r\n\r\n        dispatch({\r\n            type: COM_ACTUALIZAR,\r\n            payload: publicaciones_actualizadas\r\n        })\r\n    } catch (error) {\r\n        console.log(error.message)\r\n        dispatch({\r\n            type: COM_ERROR,\r\n            payload: 'Comtenarios no disponibles'\r\n        })\r\n    }\r\n}","export const TRAER_TODAS = 'tareas_traer_todas';\r\nexport const CARGANDO = 'tareas_cargando';\r\nexport const ERROR = 'tareas_error';\r\nexport const CAMBIO_USUARIO_ID = 'tareas_cambio_usuario_id'\r\nexport const CAMBIO_TITULO = 'tareas_cambio_titulo'\r\nexport const GUARDAR = 'tareas_guardar'\r\nexport const ACTUALIZAR = 'tareas_actualizar'\r\nexport const LIMPIAR = 'tareas_limpiar'","import axios from 'axios';\r\nimport { TRAER_TODAS, CARGANDO, ERROR, CAMBIO_USUARIO_ID, CAMBIO_TITULO, GUARDAR, ACTUALIZAR, LIMPIAR } from '../types/tareasTypes'\r\n\r\nexport const traerTodas =  () => {\r\n    return async (dispath) => {\r\n        dispath({\r\n            type: CARGANDO\r\n        })\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\r\n            const tareas = []\r\n            response.data.map((tarea) => {\r\n                tareas[tarea.userId] = {\r\n                    ... tareas[tarea.userId],\r\n                    [tarea.id]: {\r\n                        ... tarea\r\n                    }\r\n                }\r\n            })\r\n            dispath({\r\n                type: TRAER_TODAS,\r\n                payload: tareas,\r\n                error: ''\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: ERROR,\r\n                payload: 'Informacion de tareas no disponible'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const cambioUsuarioId = (usuario_id) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CAMBIO_USUARIO_ID,\r\n            payload: usuario_id\r\n        })\r\n    }\r\n}\r\n\r\nexport const cambioTitulo = (titulo) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CAMBIO_TITULO,\r\n            payload: titulo\r\n        })\r\n    }\r\n}\r\n\r\nexport const agregar = (nueva_tarea) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: CARGANDO,\r\n        })\r\n\r\n        try {\r\n            const respuesta = await axios.post('https://jsonplaceholder.typicode.com/todos', nueva_tarea)\r\n            dispatch({\r\n                type: GUARDAR\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: 'Intente mas tarde'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editar = (tarea_editada) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: CARGANDO,\r\n        })\r\n\r\n        try {\r\n            const respuesta = await axios.put(`https://jsonplaceholder.typicode.com/todos/${tarea_editada.id}`, tarea_editada)\r\n            dispatch({\r\n                type: GUARDAR\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: 'Intente mas tarde'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const cambioCheck = (usuario_id, tarea_id) => {\r\n    return (dispatch, getState) => {\r\n        const { tareas} = getState().tareasReducer;\r\n        const seleccionada = tareas[usuario_id][tarea_id]\r\n\r\n        const actualizadas = {\r\n            ... tareas,\r\n        }\r\n        actualizadas[usuario_id] = {\r\n            ... tareas[usuario_id]\r\n        }\r\n        actualizadas[usuario_id][tarea_id] = {\r\n            ... tareas[usuario_id][tarea_id],\r\n            completed: !seleccionada.completed\r\n        }\r\n\r\n        dispatch({\r\n            type: ACTUALIZAR,\r\n            payload: actualizadas\r\n        })\r\n    }\r\n}\r\n\r\nexport const eliminar = (tarea_id) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: CARGANDO,\r\n        })\r\n        try {\r\n            const respuesta = await axios.delete(`https://jsonplaceholder.typicode.com/todos/${tarea_id}`)\r\n            dispatch({\r\n                type: TRAER_TODAS,\r\n                payload: {}\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: 'El servicio no esta disponible.'\r\n            })\r\n        }\r\n    }\r\n} \r\n\r\nexport const limpiarForma = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: LIMPIAR\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as tareasActions from '../../actions/tareasActions';\r\nimport Spinner from '../General/Spinner';\r\nimport Fatal from '../General/Fatal';\r\n\r\nclass Tareas extends React.Component {\r\n    componentDidMount() {\r\n        const {\r\n            tareas,\r\n            cargando,\r\n            traerTodas\r\n        } = this.props\r\n        if (!Object.keys(tareas).length && !cargando) {\r\n            traerTodas();\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (!Object.keys(this.props.tareas).length) {\r\n            this.props.traerTodas();\r\n        }\r\n    }\r\n\r\n    mostrarContenido = () => {\r\n        const { tareas, cargando, error } = this.props\r\n        if (cargando) {\r\n            return <Spinner />\r\n        }\r\n        if (error) {\r\n            return <Fatal mensaje={error}/>\r\n        }\r\n        return Object.keys(tareas).map((usuario_id) => {\r\n            return (\r\n                <div key={usuario_id}>\r\n                    <h2>\r\n                        Usuario: {usuario_id}\r\n                    </h2>\r\n                    <div className=\"contenedor_tareas\">\r\n                        {this.ponerTareas(usuario_id)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    ponerTareas = (usuario_id) => {\r\n        const { tareas, cambioCheck, eliminar } = this.props\r\n        const por_usuario = {\r\n            ... tareas[usuario_id]\r\n        }\r\n\r\n        return Object.keys(por_usuario).map((tarea_id) => {\r\n            return (\r\n                <div key={tarea_id}>\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={por_usuario[tarea_id].completed}\r\n                        onChange={ () => cambioCheck(usuario_id, tarea_id)}\r\n                    />\r\n                    { por_usuario[tarea_id].title }\r\n                    <button className=\"m_left\">\r\n                        <Link to={`/tareas/guardar/${usuario_id}/${tarea_id}`}>\r\n                            Editar\r\n                        </Link>\r\n                    </button>\r\n                    <button className=\"m_left\" onClick={ () => eliminar(tarea_id)}>Eliminar</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.tareas)\r\n        return (\r\n            <div>\r\n                <button>\r\n                    <Link to=\"/tareas/guardar\">\r\n                        Agregar\r\n                    </Link>\r\n                </button>\r\n                {this.mostrarContenido()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( { tareasReducer } ) => tareasReducer \r\n\r\nexport default connect(mapStateToProps, tareasActions)(Tareas);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Spinner from '../General/Spinner';\r\nimport Fatal from '../General/Fatal';\r\nimport * as tareasActions from '../../actions/tareasActions';\r\n\r\nclass Guardar extends React.Component {\r\n    componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    usuario_id,\r\n                    tarea_id\r\n                }\r\n            },\r\n            tareas,\r\n            cambioUsuarioId,\r\n            cambioTitulo,\r\n            limpiarForma\r\n        } = this.props\r\n        if (usuario_id && tarea_id) {\r\n            const tarea = tareas[usuario_id][tarea_id]\r\n            cambioUsuarioId(tarea.userId)\r\n            cambioTitulo(tarea.title)\r\n        } else {\r\n            limpiarForma()\r\n        }\r\n    }\r\n\r\n    cambioUsuarioId = (event) => {\r\n        this.props.cambioUsuarioId(event.target.value)\r\n    }\r\n\r\n    cambioTitulo = (event) => {\r\n        this.props.cambioTitulo(event.target.value)\r\n    }\r\n\r\n    guardar = () => {\r\n        const { \r\n            titulo,\r\n            agregar,\r\n            match: {\r\n                params: {\r\n                    usuario_id,\r\n                    tarea_id\r\n                }\r\n            },\r\n            tareas,\r\n            editar\r\n        } = this.props\r\n        const nueva_tarea = {\r\n            userId: usuario_id,\r\n            titulo: titulo,\r\n            completed: false\r\n        }\r\n        if (usuario_id && tarea_id) {\r\n            const tarea = tareas[this.props.usuario_id][tarea_id]\r\n            const tarea_editada = {\r\n                ... nueva_tarea,\r\n                completed: tarea.completed,\r\n                id: tarea.id\r\n            }\r\n            editar(tarea_editada)\r\n        } else {\r\n            agregar(nueva_tarea);\r\n        }\r\n    }\r\n\r\n    deshabilitar = () => {\r\n        const { usuario_id, titulo, cargando} = this.props\r\n        if (cargando) {\r\n            return true;\r\n        }\r\n        if (!usuario_id || !titulo) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mostrarAccion = () => {\r\n        const { error, cargando } = this.props\r\n        if (cargando) {\r\n            return <Spinner />\r\n        }\r\n        if (error) {\r\n            return <Fatal mensaje={error}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    (this.props.regresar) ? <Redirect to=\"/tareas\"/> : ''\r\n                }\r\n                <h1>\r\n                    Guardar Tarea\r\n                </h1>\r\n                Usuario id:\r\n                <input type=\"number\" value={ this.props.usuario_id} onChange={this.cambioUsuarioId}/>\r\n                <br/>\r\n                <br/>\r\n                Titulo: \r\n                <input type=\"text\" value={ this.props.titulo } onChange={this.cambioTitulo}/>\r\n                <br/>\r\n                <br/>\r\n                <button onClick={this.guardar} disabled={ this.deshabilitar() }>\r\n                    Guardar\r\n                </button>\r\n                { this.mostrarAccion() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({tareasReducer}) => { return tareasReducer}\r\n\r\nexport default connect(mapStateToProps, tareasActions)(Guardar);","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Menu from './Menu';\nimport Usuarios from './usuarios/Usuarios';\nimport Publicaciones from './Publicaciones';\nimport Tareas from './Tareas';\nimport TareasGuardar from './Tareas/Guardar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Menu />\n        <div className=\"margen\">\n          <Route exact path='/' component={Usuarios}/>\n          <Route exact path='/tareas' component={Tareas}/>  \n          <Route exact path='/publicaciones/:key' component={Publicaciones}/>  \n          <Route exact path='/tareas/guardar' component={TareasGuardar}/>  \n          <Route exact path='/tareas/guardar/:usuario_id/:tarea_id' component={TareasGuardar}/>  \n        </div> \n    </BrowserRouter>  \n  );\n}\n\nexport default App;","import { TRAER_TODOS, CARGANDO, ERROR } from '../types/usuariosTypes'\r\n\r\nconst INITIAL_STATE = {\r\n    usuarios: [],\r\n    cargando: false,\r\n    error: ''\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case TRAER_TODOS:\r\n            return { ...state,\r\n                usuarios: action.payload,\r\n                cargando: false\r\n            };\r\n        case CARGANDO:\r\n            return { ...state, cargando: true};\r\n        case ERROR:\r\n            return { ...state, error: action.payload, cargando: false};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ACTUALIZAR, CARGANDO, ERROR, COM_ACTUALIZAR, COM_CARGANDO, COM_ERROR } from '../types/publicacionesTypes'\r\n\r\nconst INITIAL_STATE = {\r\n    publicaciones: [],\r\n    cargando: false,\r\n    error: '',\r\n    com_cargando: false,\r\n    com_error: ''\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ACTUALIZAR:\r\n            return {\r\n                ... state,\r\n                publicaciones: action.payload,\r\n                cargando: false,\r\n                error: ''\r\n            }\r\n        case CARGANDO:\r\n            return {\r\n                ... state,\r\n                cargando: true\r\n            };\r\n        case ERROR:\r\n            return {\r\n                ... state,\r\n                error: action.payload,\r\n                cargando: false\r\n            }\r\n        case COM_ACTUALIZAR:\r\n            return {\r\n                ... state,\r\n                publicaciones: action.payload,\r\n                com_cargando: false,\r\n                com_error: ''\r\n            }\r\n        case COM_CARGANDO:\r\n            return {\r\n                ... state,\r\n                com_cargando: true\r\n            };\r\n        case COM_ERROR:\r\n            return {\r\n                ... state,\r\n                com_error: action.payload,\r\n                com_cargando: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TRAER_TODAS, CARGANDO, ERROR, CAMBIO_USUARIO_ID, CAMBIO_TITULO, GUARDAR, ACTUALIZAR, LIMPIAR } from '../types/tareasTypes'\r\n\r\nconst INITIAL_STATE = {\r\n    tareas: {},\r\n    cargando: false,\r\n    error: '',\r\n    usuario_id: '',\r\n    titulo: '',\r\n    regresar: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case TRAER_TODAS:\r\n            return { ...state,\r\n                tareas: action.payload,\r\n                cargando: false,\r\n                error: '',\r\n                regresar: false\r\n            };\r\n        case CARGANDO:\r\n            return { ...state, cargando: true};\r\n        case ERROR:\r\n            return { ...state, error: action.payload, cargando: false};\r\n        case CAMBIO_USUARIO_ID:\r\n            return {\r\n                ... state,\r\n                usuario_id: action.payload\r\n            }\r\n        case CAMBIO_TITULO:\r\n            return {\r\n                ... state,\r\n                titulo: action.payload\r\n            }\r\n        case GUARDAR:\r\n            return {\r\n                ... state,\r\n                tareas: {},\r\n                cargando: false,\r\n                error: '',\r\n                regresar: true,\r\n                usuario_id: '',\r\n                titulo: ''\r\n            }\r\n        case ACTUALIZAR:\r\n            return {\r\n                ... state,\r\n                tareas: action.payload,\r\n            }\r\n        case LIMPIAR:\r\n            return {\r\n                ... state,\r\n                usuario_id: '',\r\n                titulo: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport usuariosReducer from './usuariosReducer';\r\nimport publicacionesReducer from './publicacionesReducer';\r\nimport tareasReducer from './tareasReducer';\r\n\r\nexport default combineReducers({\r\n    usuariosReducer,\r\n    publicacionesReducer,\r\n    tareasReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/iconos.css';\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(\n    reducers, //Todos los reducers\n    {}, // Estado inicial\n    applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}